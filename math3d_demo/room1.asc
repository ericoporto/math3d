// room script file
Transform3D cam;

int things_count;

float ClampFloat(float f, float max, float min){
  if(f>max) return max;
  if(f<min) return min;
  return f;
}

struct WorldThings{
  Character* c;
  float x;
  float y;
  float z;
};

WorldThings thing[6];

function room_AfterFadeIn()
{
  Matrix* m = Matrix.CreateFromString("{{2, 3, 6},{8, 5, 7}}");
  
  Display(m.AsString);
}

void UpdateThingsOnScreen(){
  for(int i=0; i<6; i++){
    ScreenPoint* sp = cam.WorldToScreen(thing[i].x , thing[i].y , thing[i].z);
    Character* c = thing[i].c;
   
    c.x = sp.x;
    c.y = sp.y;
    c.Scaling = FloatToInt(ClampFloat(100.0*sp.z, 200.0, 5.0));
    if(sp.is_visible) c.Transparency = 0;
    else c.Transparency = 100;
  }
}

void InitThingsInWorld(){
  cGrass1.ManualScaling = true;
  cGrass2.ManualScaling = true;
  cGrass3.ManualScaling = true;
  cGrass4.ManualScaling = true;
  cGrass5.ManualScaling = true;
  cBlock.ManualScaling = true;
  
  thing[0].c = cGrass1;
  thing[0].x = 5.0;
  thing[0].y = 5.0;
  
  thing[1].c = cGrass2;
  thing[1].x = 4.0;
  thing[1].y = 5.0;
  
  thing[2].c = cGrass3;
  thing[2].x = 1.0;
  thing[2].y = 1.0;
  
  thing[3].c = cGrass4;
  thing[3].x = 22.0;
  thing[3].y = 21.0;
  
  thing[4].c = cGrass5;
  thing[4].x = 14.0;
  thing[4].y = 17.0;
  
  thing[5].c = cBlock;
  thing[5].x = 7.0;
  thing[5].y = 7.0;
}

void UpdateCameraTransform(){
  float pos_x, pos_y, pos_z;
  float scale_x, scale_y, scale_z;
  float rot_x, rot_y, rot_z;
  
  pos_x = 20.0*IntToFloat(sld_cam_x.Value-500)/500.0;
  pos_y = 20.0*IntToFloat(sld_cam_y.Value-500)/500.0;
  pos_z = IntToFloat(sld_cam_z.Value-500);
  
  scale_x = 2.0*IntToFloat(sld_cam_sx.Value)/1000.0;
  scale_y = 2.0*IntToFloat(sld_cam_sy.Value)/1000.0;
  scale_z = 2.0*IntToFloat(sld_cam_sz.Value)/1000.0;
  
  rot_x = Maths.Pi*IntToFloat(sld_cam_rx.Value-500)/500.0;
  rot_y = Maths.Pi*IntToFloat(sld_cam_ry.Value-500)/500.0;
  rot_z = Maths.Pi*IntToFloat(sld_cam_rz.Value-500)/500.0;
  
  label_cam_x.Text = String.Format("x%f", pos_x);
  label_cam_y.Text = String.Format("y%f", pos_y);
  label_cam_z.Text = String.Format("z%f", pos_z);
  
  label_cam_sx.Text = String.Format("x%f", scale_x);
  label_cam_sy.Text = String.Format("y%f", scale_y);
  label_cam_sz.Text = String.Format("z%f", scale_z);
  
  label_cam_rx.Text = String.Format("x%f", rot_x);
  label_cam_ry.Text = String.Format("y%f", rot_y);
  label_cam_rz.Text = String.Format("z%f", rot_z);
  
  Vec3* v3pos = Vec3.Create(pos_x, pos_y, pos_z);
  Vec3* v3scale = Vec3.Create(scale_x, scale_y, scale_z);
  Vec3* v3rot = Vec3.Create(rot_x, rot_y, rot_z);
  
  cam.SetCameraTransform(v3pos, v3scale, v3rot);
}

int updates_cam;
void on_call(int n){
  if(n >= 990 && n<999){
    UpdateCameraTransform();
    UpdateThingsOnScreen();
    
    updates_cam++;
    label_debug.Text = String.Format(
    "g1 x=%d y=%d sc=%d[g2 x=%d y=%d sc=%d[g3 x=%d y=%d sc=%d[g4 x=%d y=%d sc=%d[g5 x=%d y=%d sc=%d[[%d", 
    cGrass1.x, cGrass1.y, cGrass1.Scaling, 
    cGrass2.x, cGrass2.y, cGrass2.Scaling, 
    cGrass3.x, cGrass3.y, cGrass3.Scaling, 
    cGrass4.x, cGrass4.y, cGrass4.Scaling, 
    cGrass5.x, cGrass5.y, cGrass5.Scaling, updates_cam);
  }
       
}

function room_Load()
{
  things_count =6;
  
  sld_cam_x.Min = 0;
  sld_cam_x.Value = 500;
  sld_cam_x.Max = 1000;
    
  sld_cam_y.Min = 0;
  sld_cam_y.Value = 500;
  sld_cam_y.Max = 1000;
  
  sld_cam_z.Min = 0;
  sld_cam_z.Value = 500;
  sld_cam_z.Max = 1000;

  sld_cam_sx.Min = 1;
  sld_cam_sx.Value = 500;
  sld_cam_sx.Max = 1000;
    
  sld_cam_sy.Min = 1;
  sld_cam_sy.Value = 500;
  sld_cam_sy.Max = 1000;
  
  sld_cam_sz.Min = 1;
  sld_cam_sz.Value = 500;
  sld_cam_sz.Max = 1000;

  sld_cam_rx.Min = 0;
  sld_cam_rx.Value = 1000;
  sld_cam_rx.Max = 1000;
    
  sld_cam_ry.Min = 0;
  sld_cam_ry.Value = 500;
  sld_cam_ry.Max = 1000;
  
  sld_cam_rz.Min = 0;
  sld_cam_rz.Value = 1000;
  sld_cam_rz.Max = 1000;
  
  cam.Init();
  cam.SetSurfaceSize(320.0, 180.0);
  cam.SetPosition(0, 0, 320, 180);
  cam.SetPerspectiveProjection(60.0, 1.0, 1000.0);
  
  cam.SetCameraTransform(
    Vec3.Create(20.0, 20.0, 500.0), 
    Vec3.Create(1.0, 1.0, 1.0), 
    Vec3.Create(Maths.Pi, 0.001, Maths.Pi));
    
  InitThingsInWorld();
  
}
