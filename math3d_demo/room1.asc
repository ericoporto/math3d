// room script file
Transform3D cam;

int things_count;

float ClampFloat(float f, float max, float min){
  if(f>max) return max;
  if(f<min) return min;
  return f;
}

struct WorldThings{
  Character* c;
  float x;
  float y;
  float z;
};

WorldThings thing[11];

function room_AfterFadeIn()
{
 // Matrix* m = Matrix.CreateFromString("{{2, 3, 6},{8, 5, 7}}");

 // Display(m.AsString);
}

void UpdateThingsOnScreen(){
  for(int i=0; i<11; i++){
    ScreenPoint* sp = cam.WorldToScreen(thing[i].x , thing[i].y , thing[i].z);
    Character* c = thing[i].c;

    c.x = sp.x;
    c.y = sp.y;
    c.Scaling = FloatToInt(ClampFloat(100.0*(sp.z/2.0), 200.0, 10.0));
    if(sp.is_visible) c.Transparency = 0;
    else c.Transparency = 100;
  }
}

void setThing(int i, Character* c, float x, float y, float z){
  thing[i].c = c;
  thing[i].x = x;
  thing[i].y = y;
  thing[i].z = z;
}

void InitThingsInWorld(){
  cGrass1.ManualScaling = true;
  cGrass2.ManualScaling = true;
  cGrass3.ManualScaling = true;
  cGrass4.ManualScaling = true;
  cGrass5.ManualScaling = true;
  cBlock.ManualScaling = true;

  setThing(0, cGrass1, 2.0, 2.0, 2.0);
  setThing(1, cGrass2, 1.0, 1.0, 2.0);
  setThing(2, cGrass3, -2.0, 0.0, 2.0);
  setThing(3, cGrass4, -2.0, -2.0, 2.0);
  setThing(4, cGrass5, -1.0, -1.0, 2.0);
  setThing(5, cGrass6, 0.5, 0.0, 2.0);
  setThing(6, cGrass7, 0.0, 0.5, 2.0);
  setThing(7, cGrass8, -0.5, 0.0, 2.0);
  setThing(8, cGrass9, 0.0, -0.5, 2.0);
  setThing(9, cGrass10, 0.2, -0.2, 2.0);
  setThing(10, cBlock, 0.0, 0.0, 2.0);


}

void setInitCamControls(float x, float y,  float z, float sx, float sy, float sz,  float rx, float ry, float rz){
  sld_cam_x.Value = FloatToInt(x*500.0/20.0+500.0);
  sld_cam_y.Value = FloatToInt(y*500.0/20.0+500.0);
  sld_cam_z.Value = FloatToInt(z*500.0/20.0+500.0);
  
  sld_cam_sx.Value = FloatToInt(sx*1000.0/5.0);
  sld_cam_sy.Value = FloatToInt(sy*1000.0/5.0);
  sld_cam_sz.Value = FloatToInt(sz*1000.0/5.0);
  
  sld_cam_rx.Value = FloatToInt(rx*500.0/Maths.Pi+500.0);
  sld_cam_ry.Value = FloatToInt(ry*500.0/Maths.Pi+500.0);
  sld_cam_rz.Value = FloatToInt(rz*500.0/Maths.Pi+500.0);
 
  
  float pos_x, pos_y, pos_z;
  float scale_x, scale_y, scale_z;
  float rot_x, rot_y, rot_z;
  
  pos_x = 20.0*IntToFloat(sld_cam_x.Value-500)/500.0;
  pos_y = 20.0*IntToFloat(sld_cam_y.Value-500)/500.0;
  pos_z = 20.0*IntToFloat(sld_cam_z.Value-500)/500.0;

  scale_x = 5.0*IntToFloat(sld_cam_sx.Value)/1000.0;
  scale_y = 5.0*IntToFloat(sld_cam_sy.Value)/1000.0;
  scale_z = 5.0*IntToFloat(sld_cam_sz.Value)/1000.0;

  rot_x = Maths.Pi*IntToFloat(sld_cam_rx.Value-500)/500.0;
  rot_y = Maths.Pi*IntToFloat(sld_cam_ry.Value-500)/500.0;
  rot_z = Maths.Pi*IntToFloat(sld_cam_rz.Value-500)/500.0;
  
  label_cam_x.Text = String.Format("x%f", pos_x);
  label_cam_y.Text = String.Format("y%f", pos_y);
  label_cam_z.Text = String.Format("z%f", pos_z);

  label_cam_sx.Text = String.Format("x%f", scale_x);
  label_cam_sy.Text = String.Format("y%f", scale_y);
  label_cam_sz.Text = String.Format("z%f", scale_z);

  label_cam_rx.Text = String.Format("x%f", rot_x);
  label_cam_ry.Text = String.Format("y%f", rot_y);
  label_cam_rz.Text = String.Format("z%f", rot_z);
}

void UpdateCameraTransform(){
  float pos_x, pos_y, pos_z;
  float scale_x, scale_y, scale_z;
  float rot_x, rot_y, rot_z;

  pos_x = 20.0*IntToFloat(sld_cam_x.Value-500)/500.0;
  pos_y = 20.0*IntToFloat(sld_cam_y.Value-500)/500.0;
  pos_z = 20.0*IntToFloat(sld_cam_z.Value-500)/500.0;

  scale_x = 5.0*IntToFloat(sld_cam_sx.Value)/1000.0;
  scale_y = 5.0*IntToFloat(sld_cam_sy.Value)/1000.0;
  scale_z = 5.0*IntToFloat(sld_cam_sz.Value)/1000.0;

  rot_x = Maths.Pi*IntToFloat(sld_cam_rx.Value-500)/500.0;
  rot_y = Maths.Pi*IntToFloat(sld_cam_ry.Value-500)/500.0;
  rot_z = Maths.Pi*IntToFloat(sld_cam_rz.Value-500)/500.0;

  label_cam_x.Text = String.Format("x%f", pos_x);
  label_cam_y.Text = String.Format("y%f", pos_y);
  label_cam_z.Text = String.Format("z%f", pos_z);

  label_cam_sx.Text = String.Format("x%f", scale_x);
  label_cam_sy.Text = String.Format("y%f", scale_y);
  label_cam_sz.Text = String.Format("z%f", scale_z);

  label_cam_rx.Text = String.Format("x%f", rot_x);
  label_cam_ry.Text = String.Format("y%f", rot_y);
  label_cam_rz.Text = String.Format("z%f", rot_z);

  Vec3* v3pos = Vec3.Create(pos_x, pos_y, pos_z);
  Vec3* v3scale = Vec3.Create(scale_x, scale_y, scale_z);
  Vec3* v3rot = Vec3.Create(rot_x, rot_y, rot_z);

  cam.SetCameraTransform(v3pos, v3scale, v3rot);
}

int updates_cam;
void on_call(int n){
  if(n >= 990 && n<999){
    UpdateCameraTransform();
    UpdateThingsOnScreen();

    updates_cam++;
    
    String dbgtxt = "";
    
    for(int i=0; i<6; i++){
      Character* c = thing[i].c;
      dbgtxt = dbgtxt.Append(
        String.Format(
          "%s x=%d y=%d sc=%d t=%d[",
          c.Name, c.x, c.y, c.Scaling, c.Transparency));
    }
    
    label_debug.Text = dbgtxt;
  }

}

function room_Load()
{
  things_count =11;

  sld_cam_x.Min = 0;
  sld_cam_x.Value = 500;
  sld_cam_x.Max = 1000;

  sld_cam_y.Min = 0;
  sld_cam_y.Value = 500;
  sld_cam_y.Max = 1000;

  sld_cam_z.Min = 0;
  sld_cam_z.Value = 500;
  sld_cam_z.Max = 1000;

  sld_cam_sx.Min = 10;
  sld_cam_sx.Value = 200;
  sld_cam_sx.Max = 1000;

  sld_cam_sy.Min = 10;
  sld_cam_sy.Value = 200;
  sld_cam_sy.Max = 1000;

  sld_cam_sz.Min = 10;
  sld_cam_sz.Value = 200;
  sld_cam_sz.Max = 1000;

  sld_cam_rx.Min = 0;
  sld_cam_rx.Value = 1000;
  sld_cam_rx.Max = 1000;

  sld_cam_ry.Min = 0;
  sld_cam_ry.Value = 500;
  sld_cam_ry.Max = 1000;

  sld_cam_rz.Min = 0;
  sld_cam_rz.Value = 1000;
  sld_cam_rz.Max = 1000;

  cam.Init();
  cam.SetSurfaceSize(320.0, 180.0);
  cam.SetPosition(0, 0, 320, 180);
  cam.SetPerspectiveProjection(60.0, 1.0, 1000.0);

  cam.SetCameraTransform(
    Vec3.Create(-8.5, -236.6, 391.5),
    Vec3.Create(1.0, 1.0, 1.0),
    Vec3.Create(2.718, 0.001, 0.0));
    
  setInitCamControls(-8.5, -236.6, 391.5, 1.0, 1.0, 1.0, 2.718, 0.001, 0.0);

  InitThingsInWorld();
  UpdateThingsOnScreen();

  updates_cam++;
  label_debug.Text = String.Format(
  "g1 x=%d y=%d sc=%d[g2 x=%d y=%d sc=%d[g3 x=%d y=%d sc=%d[g4 x=%d y=%d sc=%d[g5 x=%d y=%d sc=%d[[%d",
  cGrass1.x, cGrass1.y, cGrass1.Scaling,
  cGrass2.x, cGrass2.y, cGrass2.Scaling,
  cGrass3.x, cGrass3.y, cGrass3.Scaling,
  cGrass4.x, cGrass4.y, cGrass4.Scaling,
  cGrass5.x, cGrass5.y, cGrass5.Scaling, updates_cam);

}
